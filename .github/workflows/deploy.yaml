name: Deploy to Cloudflare

on:
    workflow_dispatch:
    push:
        branches: 'main'

jobs:
    build_site:
        name: Deploy site
        runs-on: ubuntu-latest
        environment: PRD
        permissions:
            contents: read
            deployments: write
        steps:
            - name: 📚 Git Checkout
              uses: actions/checkout@v4

            - name: 🦕 Install deno
              uses: denoland/setup-deno@v2
              with:
                  deno-version: v2.x

            - name: 🔍 Get deno cache directory
              run: |
                  echo "DENO_PATH=$(deno info | grep -e 'DENO_DIR.*' | sed -E 's/DENO_DIR.*:(.*)/\1/' | tr -d ' ')" >> $GITHUB_ENV

            - name: 🔮 Setup deno cache
              uses: actions/cache@v4
              id: cache
              with:
                  path: |
                      ${{ env.DENO_PATH }}
                      node_modules
                  key: ${{ runner.os }}-cache-${{ hashFiles('**/package.json') }}
                  restore-keys: |
                      ${{ runner.os }}-deno-cache

            - name: 📦 Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: |
                  deno i --allow-scripts=npm:sharp@0.33.5,npm:@parcel/watcher@2.5.1
                  deno run -A npm:astro telemetry disable

            - name: 👷 Build
              run: deno task build

            - name: 🪄 Get commit info
              run: |
                  echo "COMMIT_HASH=$(git log -1 --pretty=format:"%H" | tail)" >> $GITHUB_ENV
                  echo "COMMIT_MESSAGE=$(git show -s --format=%s  | tail)" >> $GITHUB_ENV

            - name: 📢 Publish
              env:
                  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACC_ID }}
              run: |
                  npm i wrangler -g
                  wrangler pages deploy dist \
                     --project-name="${{ vars.CLOUDFLARE_PRJ_NAME }}" \
                     --branch=main \
                     --commit-hash="${{ env.COMMIT_HASH }}" \
                     --commit-message="${{ env.COMMIT_MESSAGE }}" \
                     --commit-dirty=true
